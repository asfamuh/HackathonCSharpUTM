@{
    ViewData["Title"] = "CO2 Emissions";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<!-- Dropdown for year selection -->
<div>
    <label for="year-select">Select Year:</label>
    <select id="year-select" onchange="refreshMap()">
        @for (int year = 2000; year <= 2023; year++)
        {
            <option value="@year">@year</option>
        }
    </select>
</div>

<!-- Add a div for the map -->
<div id="map" style="height: 600px; width: 100%; margin-top: 20px;"></div>

<!-- Include Leaflet.js -->
<link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
<script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

<script>
    var map;

    // Define the bounds for Canada
    var canadaBounds = [
        [41.6765556, -141.00187], // Southwest corner
        [83.11388, -52.63629]     // Northeast corner
    ];

    // Initialize the map
    function initMap() {
        map = L.map('map').fitBounds(canadaBounds);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: 'Â© OpenStreetMap contributors'
        }).addTo(map);
        map.setMaxBounds(canadaBounds);
        map.setMinZoom(4);
    }

    // Refresh map on year selection
    function refreshMap() {
        var selectedYear = document.getElementById('year-select').value;
        console.log("Year selected: " + selectedYear);

        // Reset the map
        map.remove();
        initMap();

        // Additional actions to refresh data based on year
        // This can involve fetching new data via API calls for the selected year.
    }

    // Initialize the map when the page loads
    initMap();
</script>
